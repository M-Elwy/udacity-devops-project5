version: 2.1
orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  linting:
    docker:
      - image: python:3.7-alpine3.11
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            apk add --update curl nginx
  build:
    docker:
      - image: alpine:3.14
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            apk add --update curl nginx
      - run:
          name: copy configuration
          command: |
            cp -f nginx.conf /etc/nginx/nginx.conf
            cat /etc/nginx/nginx.conf
      - run:
          name: copy app
          command: |
            cp -r ./www /www
            cat /www/index.html
      - run:
          name: start server
          command: |
            nginx
      - run:
          name: linting
          command: |
            nginx -c ~/repo/nginx.conf -t
      - run:
          name: Run test
          command: |
            if curl -s localhost | grep "Elwy"
            then
              return 0
            else
              return 1
            fi

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.json
          resource-name: deployment/blue
  create-service:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: service.json
          resource-name: service/bluegreenlb
  create-small-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ''

workflows:
  default:
    jobs:
      - linting
      - build:
          requires: [linting]
      - create-small-cluster:
          cluster-name: eks-demo-deployment
          requires: [build]
      - create-service:
          cluster-name: eks-demo-deployment
          requires:
            - create-small-cluster
      - create-deployment:
          cluster-name: eks-demo-deployment
          requires:
            - create-service
      - aws-eks/update-container-image:
          cluster-name: eks-demo-deployment
          container-image-updates: 'blue=elwy/testblueimage:latest'
          record: true
          requires:
            - create-deployment
          resource-name: deployment/blue